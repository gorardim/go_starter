// Code generated by xapi. DO NOT EDIT.

package admin

import "github.com/gin-gonic/gin"

type centerMenuServer struct {
	svc CenterMenuServer
}

func (o *centerMenuServer) All(c *gin.Context) (interface{}, error) {
	req := new(CenterMenuAllRequest)

	resp, err := o.svc.All(c.Request.Context(), req)
	if err != nil {
		return nil, err
	}
	return resp, nil
}

func (o *centerMenuServer) Detail(c *gin.Context) (interface{}, error) {
	req := new(CenterMenuDetailRequest)

	if err := c.ShouldBind(req); err != nil {
		return nil, err
	}

	resp, err := o.svc.Detail(c.Request.Context(), req)
	if err != nil {
		return nil, err
	}
	return resp, nil
}

func (o *centerMenuServer) Create(c *gin.Context) (interface{}, error) {
	req := new(CenterMenuCreateRequest)

	if err := c.ShouldBind(req); err != nil {
		return nil, err
	}

	resp, err := o.svc.Create(c.Request.Context(), req)
	if err != nil {
		return nil, err
	}
	return resp, nil
}

func (o *centerMenuServer) Update(c *gin.Context) (interface{}, error) {
	req := new(CenterMenuUpdateRequest)

	if err := c.ShouldBind(req); err != nil {
		return nil, err
	}

	resp, err := o.svc.Update(c.Request.Context(), req)
	if err != nil {
		return nil, err
	}
	return resp, nil
}

func (o *centerMenuServer) SwitchStatus(c *gin.Context) (interface{}, error) {
	req := new(CenterMenuSwitchStatusRequest)

	if err := c.ShouldBind(req); err != nil {
		return nil, err
	}

	resp, err := o.svc.SwitchStatus(c.Request.Context(), req)
	if err != nil {
		return nil, err
	}
	return resp, nil
}

func (o *centerMenuServer) BindApiCreate(c *gin.Context) (interface{}, error) {
	req := new(CenterMenuBindApiCreateRequest)

	if err := c.ShouldBind(req); err != nil {
		return nil, err
	}

	resp, err := o.svc.BindApiCreate(c.Request.Context(), req)
	if err != nil {
		return nil, err
	}
	return resp, nil
}

func (o *centerMenuServer) BindApiList(c *gin.Context) (interface{}, error) {
	req := new(CenterMenuBindApiListRequest)

	if err := c.ShouldBind(req); err != nil {
		return nil, err
	}

	resp, err := o.svc.BindApiList(c.Request.Context(), req)
	if err != nil {
		return nil, err
	}
	return resp, nil
}

func (o *centerMenuServer) BindApiAll(c *gin.Context) (interface{}, error) {
	req := new(CenterMenuBindApiAllRequest)

	resp, err := o.svc.BindApiAll(c.Request.Context(), req)
	if err != nil {
		return nil, err
	}
	return resp, nil
}

func (o *centerMenuServer) BindApiDelete(c *gin.Context) (interface{}, error) {
	req := new(CenterMenuBindApiDeleteRequest)

	if err := c.ShouldBind(req); err != nil {
		return nil, err
	}

	resp, err := o.svc.BindApiDelete(c.Request.Context(), req)
	if err != nil {
		return nil, err
	}
	return resp, nil
}

func RegisterCenterMenuServer(r *gin.Engine, svc CenterMenuServer, handle func(func(c *gin.Context) (interface{}, error)) gin.HandlerFunc, middlewares ...gin.HandlerFunc) {
	server := &centerMenuServer{
		svc: svc,
	}

	r.POST("/admin/center/menu/all", append(middlewares, handle(server.All))...)
	r.POST("/admin/center/menu/detail", append(middlewares, handle(server.Detail))...)
	r.POST("/admin/center/menu/create", append(middlewares, handle(server.Create))...)
	r.POST("/admin/center/menu/update", append(middlewares, handle(server.Update))...)
	r.POST("/admin/center/menu/switch/status", append(middlewares, handle(server.SwitchStatus))...)
	r.POST("/admin/center/menu/bind/api/create", append(middlewares, handle(server.BindApiCreate))...)
	r.POST("/admin/center/menu/bind/api/list", append(middlewares, handle(server.BindApiList))...)
	r.POST("/admin/center/menu/bind/api/all", append(middlewares, handle(server.BindApiAll))...)
	r.POST("/admin/center/menu/bind/api/delete", append(middlewares, handle(server.BindApiDelete))...)
}
